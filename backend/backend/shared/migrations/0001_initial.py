# Generated by Django 5.2 on 2025-04-10 09:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_id', models.CharField(max_length=20, unique=True)),
                ('only_premium', models.BooleanField(default=False)),
                ('is_blacklisted', models.BooleanField(default=False)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='shared.language')),
            ],
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField()),
                ('start', models.FloatField()),
                ('duration', models.FloatField()),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to='shared.video')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_word', models.CharField(max_length=100, unique=True)),
                ('meanings', models.JSONField(default=list)),
                ('occurs_in_snippets', models.ManyToManyField(blank=True, related_name='words', to='shared.snippet')),
                ('videos', models.ManyToManyField(blank=True, related_name='words', to='shared.video')),
            ],
        ),
    ]
