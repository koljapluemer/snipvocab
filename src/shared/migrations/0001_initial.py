# Generated by Django 5.2 on 2025-05-04 11:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('from_youtube', 'From YouTube'), ('from_search', 'From Search'), ('manual', 'Manual'), ('unknown', 'Unknown')], default='unknown', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frontend', models.CharField(choices=[('de', 'ðŸ‡©ðŸ‡ª'), ('ar', 'ðŸ‡ªðŸ‡¬')], default='ar', max_length=10)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('available_subtitle_languages', models.JSONField(blank=True, default=list, null=True)),
                ('checked_for_relevant_subtitles', models.BooleanField(default=False)),
                ('youtube_id', models.CharField(max_length=20, unique=True)),
                ('priority', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('needs_review', 'Needs Review'), ('shortlisted', 'Shortlisted'), ('longlisted', 'Longlisted'), ('not_relevant', 'Not Relevant'), ('snippets_generated', 'Snippets Generated'), ('snippets_and_translations_generated', 'Snippets and Translations Generated'), ('live', 'Live'), ('blacklisted', 'Blacklisted')], default='needs_review', max_length=100)),
                ('comment', models.TextField(blank=True)),
                ('youtube_title', models.CharField(blank=True, max_length=500, null=True)),
                ('channel_name', models.CharField(blank=True, max_length=500, null=True)),
                ('video_views', models.IntegerField(default=0)),
                ('video_likes', models.IntegerField(default=0)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('tags', models.ManyToManyField(blank=True, related_name='videos', to='shared.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('index', models.PositiveIntegerField()),
                ('start', models.FloatField()),
                ('duration', models.FloatField()),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to='shared.video')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_word', models.CharField(max_length=100, unique=True)),
                ('occurs_in_snippets', models.ManyToManyField(blank=True, related_name='words', to='shared.snippet')),
                ('videos', models.ManyToManyField(blank=True, related_name='words', to='shared.video')),
            ],
        ),
        migrations.CreateModel(
            name='Meaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en', models.TextField()),
                ('creation_method', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('needs_review', 'Needs Review'), ('live', 'Live'), ('blacklisted', 'Blacklisted')], default='live', max_length=100)),
                ('snippet_context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meanings', to='shared.snippet')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meanings', to='shared.word')),
            ],
        ),
    ]
